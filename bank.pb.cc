// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bank.proto

#include "bank.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace bank {
class BankCreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BankCreateReq> _instance;
} _BankCreateReq_default_instance_;
class BankCreateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BankCreateResp> _instance;
} _BankCreateResp_default_instance_;
class AccountCreateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountCreateReq> _instance;
} _AccountCreateReq_default_instance_;
class AccountCreateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountCreateResp> _instance;
} _AccountCreateResp_default_instance_;
class AmountAddReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AmountAddReq> _instance;
} _AmountAddReq_default_instance_;
class AmountAddRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AmountAddResp> _instance;
} _AmountAddResp_default_instance_;
class AmountSubReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AmountSubReq> _instance;
} _AmountSubReq_default_instance_;
class AmountSubRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AmountSubResp> _instance;
} _AmountSubResp_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
}  // namespace bank
static void InitDefaultsscc_info_AccountCreateReq_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AccountCreateReq_default_instance_;
    new (ptr) ::bank::AccountCreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AccountCreateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountCreateReq_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountCreateReq_bank_2eproto}, {}};

static void InitDefaultsscc_info_AccountCreateResp_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AccountCreateResp_default_instance_;
    new (ptr) ::bank::AccountCreateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AccountCreateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountCreateResp_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountCreateResp_bank_2eproto}, {}};

static void InitDefaultsscc_info_AmountAddReq_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AmountAddReq_default_instance_;
    new (ptr) ::bank::AmountAddReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AmountAddReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AmountAddReq_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AmountAddReq_bank_2eproto}, {}};

static void InitDefaultsscc_info_AmountAddResp_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AmountAddResp_default_instance_;
    new (ptr) ::bank::AmountAddResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AmountAddResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AmountAddResp_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AmountAddResp_bank_2eproto}, {}};

static void InitDefaultsscc_info_AmountSubReq_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AmountSubReq_default_instance_;
    new (ptr) ::bank::AmountSubReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AmountSubReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AmountSubReq_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AmountSubReq_bank_2eproto}, {}};

static void InitDefaultsscc_info_AmountSubResp_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_AmountSubResp_default_instance_;
    new (ptr) ::bank::AmountSubResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::AmountSubResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AmountSubResp_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AmountSubResp_bank_2eproto}, {}};

static void InitDefaultsscc_info_BankCreateReq_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_BankCreateReq_default_instance_;
    new (ptr) ::bank::BankCreateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::BankCreateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BankCreateReq_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BankCreateReq_bank_2eproto}, {}};

static void InitDefaultsscc_info_BankCreateResp_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_BankCreateResp_default_instance_;
    new (ptr) ::bank::BankCreateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::BankCreateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BankCreateResp_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BankCreateResp_bank_2eproto}, {}};

static void InitDefaultsscc_info_Empty_bank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bank::_Empty_default_instance_;
    new (ptr) ::bank::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bank::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_bank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_bank_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bank_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bank_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bank_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bank_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::BankCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::BankCreateReq, cap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::BankCreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::BankCreateResp, cap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AccountCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AccountCreateReq, account_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AccountCreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AccountCreateResp, new_amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AmountAddReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AmountAddReq, account_name_),
  PROTOBUF_FIELD_OFFSET(::bank::AmountAddReq, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AmountAddResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AmountAddResp, new_amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AmountSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AmountSubReq, account_name_),
  PROTOBUF_FIELD_OFFSET(::bank::AmountSubReq, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::AmountSubResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bank::AmountSubResp, new_amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bank::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bank::BankCreateReq)},
  { 6, -1, sizeof(::bank::BankCreateResp)},
  { 12, -1, sizeof(::bank::AccountCreateReq)},
  { 18, -1, sizeof(::bank::AccountCreateResp)},
  { 24, -1, sizeof(::bank::AmountAddReq)},
  { 31, -1, sizeof(::bank::AmountAddResp)},
  { 37, -1, sizeof(::bank::AmountSubReq)},
  { 44, -1, sizeof(::bank::AmountSubResp)},
  { 50, -1, sizeof(::bank::Empty)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_BankCreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_BankCreateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AccountCreateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AccountCreateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AmountAddReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AmountAddResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AmountSubReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_AmountSubResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bank::_Empty_default_instance_),
};

const char descriptor_table_protodef_bank_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nbank.proto\022\004bank\"\034\n\rBankCreateReq\022\013\n\003c"
  "ap\030\001 \001(\003\"\035\n\016BankCreateResp\022\013\n\003cap\030\001 \001(\003\""
  "(\n\020AccountCreateReq\022\024\n\014account_name\030\001 \001("
  "\t\"\'\n\021AccountCreateResp\022\022\n\nnew_amount\030\001 \001"
  "(\003\"4\n\014AmountAddReq\022\024\n\014account_name\030\001 \001(\t"
  "\022\016\n\006amount\030\002 \001(\003\"#\n\rAmountAddResp\022\022\n\nnew"
  "_amount\030\001 \001(\003\"4\n\014AmountSubReq\022\024\n\014account"
  "_name\030\001 \001(\t\022\016\n\006amount\030\002 \001(\003\"#\n\rAmountSub"
  "Resp\022\022\n\nnew_amount\030\001 \001(\003\"\007\n\005Empty2\226\002\n\004ba"
  "nk\0227\n\nBankCreate\022\023.bank.BankCreateReq\032\024."
  "bank.BankCreateResp\022@\n\rCreateAccount\022\026.b"
  "ank.AccountCreateReq\032\027.bank.AccountCreat"
  "eResp\0224\n\tAddAmount\022\022.bank.AmountAddReq\032\023"
  ".bank.AmountAddResp\0224\n\tSubAmount\022\022.bank."
  "AmountSubReq\032\023.bank.AmountSubResp\022\'\n\013Lis"
  "tAccount\022\013.bank.Empty\032\013.bank.Emptyb\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bank_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bank_2eproto_sccs[9] = {
  &scc_info_AccountCreateReq_bank_2eproto.base,
  &scc_info_AccountCreateResp_bank_2eproto.base,
  &scc_info_AmountAddReq_bank_2eproto.base,
  &scc_info_AmountAddResp_bank_2eproto.base,
  &scc_info_AmountSubReq_bank_2eproto.base,
  &scc_info_AmountSubResp_bank_2eproto.base,
  &scc_info_BankCreateReq_bank_2eproto.base,
  &scc_info_BankCreateResp_bank_2eproto.base,
  &scc_info_Empty_bank_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bank_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bank_2eproto = {
  false, false, descriptor_table_protodef_bank_2eproto, "bank.proto", 642,
  &descriptor_table_bank_2eproto_once, descriptor_table_bank_2eproto_sccs, descriptor_table_bank_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_bank_2eproto::offsets,
  file_level_metadata_bank_2eproto, 9, file_level_enum_descriptors_bank_2eproto, file_level_service_descriptors_bank_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bank_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bank_2eproto)), true);
namespace bank {

// ===================================================================

void BankCreateReq::InitAsDefaultInstance() {
}
class BankCreateReq::_Internal {
 public:
};

BankCreateReq::BankCreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.BankCreateReq)
}
BankCreateReq::BankCreateReq(const BankCreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cap_ = from.cap_;
  // @@protoc_insertion_point(copy_constructor:bank.BankCreateReq)
}

void BankCreateReq::SharedCtor() {
  cap_ = PROTOBUF_LONGLONG(0);
}

BankCreateReq::~BankCreateReq() {
  // @@protoc_insertion_point(destructor:bank.BankCreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BankCreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BankCreateReq::ArenaDtor(void* object) {
  BankCreateReq* _this = reinterpret_cast< BankCreateReq* >(object);
  (void)_this;
}
void BankCreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BankCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BankCreateReq& BankCreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BankCreateReq_bank_2eproto.base);
  return *internal_default_instance();
}


void BankCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.BankCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cap_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BankCreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 cap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BankCreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.BankCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cap = 1;
  if (this->cap() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_cap(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.BankCreateReq)
  return target;
}

size_t BankCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.BankCreateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 cap = 1;
  if (this->cap() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cap());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BankCreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.BankCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BankCreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BankCreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.BankCreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.BankCreateReq)
    MergeFrom(*source);
  }
}

void BankCreateReq::MergeFrom(const BankCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.BankCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cap() != 0) {
    _internal_set_cap(from._internal_cap());
  }
}

void BankCreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.BankCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankCreateReq::CopyFrom(const BankCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.BankCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankCreateReq::IsInitialized() const {
  return true;
}

void BankCreateReq::InternalSwap(BankCreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(cap_, other->cap_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BankCreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BankCreateResp::InitAsDefaultInstance() {
}
class BankCreateResp::_Internal {
 public:
};

BankCreateResp::BankCreateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.BankCreateResp)
}
BankCreateResp::BankCreateResp(const BankCreateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cap_ = from.cap_;
  // @@protoc_insertion_point(copy_constructor:bank.BankCreateResp)
}

void BankCreateResp::SharedCtor() {
  cap_ = PROTOBUF_LONGLONG(0);
}

BankCreateResp::~BankCreateResp() {
  // @@protoc_insertion_point(destructor:bank.BankCreateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BankCreateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BankCreateResp::ArenaDtor(void* object) {
  BankCreateResp* _this = reinterpret_cast< BankCreateResp* >(object);
  (void)_this;
}
void BankCreateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BankCreateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BankCreateResp& BankCreateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BankCreateResp_bank_2eproto.base);
  return *internal_default_instance();
}


void BankCreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.BankCreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cap_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BankCreateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 cap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BankCreateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.BankCreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cap = 1;
  if (this->cap() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_cap(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.BankCreateResp)
  return target;
}

size_t BankCreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.BankCreateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 cap = 1;
  if (this->cap() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cap());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BankCreateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.BankCreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const BankCreateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BankCreateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.BankCreateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.BankCreateResp)
    MergeFrom(*source);
  }
}

void BankCreateResp::MergeFrom(const BankCreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.BankCreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cap() != 0) {
    _internal_set_cap(from._internal_cap());
  }
}

void BankCreateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.BankCreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankCreateResp::CopyFrom(const BankCreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.BankCreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankCreateResp::IsInitialized() const {
  return true;
}

void BankCreateResp::InternalSwap(BankCreateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(cap_, other->cap_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BankCreateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountCreateReq::InitAsDefaultInstance() {
}
class AccountCreateReq::_Internal {
 public:
};

AccountCreateReq::AccountCreateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AccountCreateReq)
}
AccountCreateReq::AccountCreateReq(const AccountCreateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account_name().empty()) {
    account_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_account_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bank.AccountCreateReq)
}

void AccountCreateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountCreateReq_bank_2eproto.base);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountCreateReq::~AccountCreateReq() {
  // @@protoc_insertion_point(destructor:bank.AccountCreateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountCreateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  account_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountCreateReq::ArenaDtor(void* object) {
  AccountCreateReq* _this = reinterpret_cast< AccountCreateReq* >(object);
  (void)_this;
}
void AccountCreateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountCreateReq& AccountCreateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountCreateReq_bank_2eproto.base);
  return *internal_default_instance();
}


void AccountCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AccountCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountCreateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bank.AccountCreateReq.account_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountCreateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AccountCreateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account_name().data(), static_cast<int>(this->_internal_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bank.AccountCreateReq.account_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AccountCreateReq)
  return target;
}

size_t AccountCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AccountCreateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountCreateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AccountCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountCreateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountCreateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AccountCreateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AccountCreateReq)
    MergeFrom(*source);
  }
}

void AccountCreateReq::MergeFrom(const AccountCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AccountCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {
    _internal_set_account_name(from._internal_account_name());
  }
}

void AccountCreateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AccountCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountCreateReq::CopyFrom(const AccountCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AccountCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountCreateReq::IsInitialized() const {
  return true;
}

void AccountCreateReq::InternalSwap(AccountCreateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  account_name_.Swap(&other->account_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountCreateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountCreateResp::InitAsDefaultInstance() {
}
class AccountCreateResp::_Internal {
 public:
};

AccountCreateResp::AccountCreateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AccountCreateResp)
}
AccountCreateResp::AccountCreateResp(const AccountCreateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_amount_ = from.new_amount_;
  // @@protoc_insertion_point(copy_constructor:bank.AccountCreateResp)
}

void AccountCreateResp::SharedCtor() {
  new_amount_ = PROTOBUF_LONGLONG(0);
}

AccountCreateResp::~AccountCreateResp() {
  // @@protoc_insertion_point(destructor:bank.AccountCreateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccountCreateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AccountCreateResp::ArenaDtor(void* object) {
  AccountCreateResp* _this = reinterpret_cast< AccountCreateResp* >(object);
  (void)_this;
}
void AccountCreateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccountCreateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountCreateResp& AccountCreateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountCreateResp_bank_2eproto.base);
  return *internal_default_instance();
}


void AccountCreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AccountCreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_amount_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccountCreateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 new_amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          new_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountCreateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AccountCreateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_new_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AccountCreateResp)
  return target;
}

size_t AccountCreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AccountCreateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_new_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountCreateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AccountCreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountCreateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountCreateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AccountCreateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AccountCreateResp)
    MergeFrom(*source);
  }
}

void AccountCreateResp::MergeFrom(const AccountCreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AccountCreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_amount() != 0) {
    _internal_set_new_amount(from._internal_new_amount());
  }
}

void AccountCreateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AccountCreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountCreateResp::CopyFrom(const AccountCreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AccountCreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountCreateResp::IsInitialized() const {
  return true;
}

void AccountCreateResp::InternalSwap(AccountCreateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(new_amount_, other->new_amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountCreateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AmountAddReq::InitAsDefaultInstance() {
}
class AmountAddReq::_Internal {
 public:
};

AmountAddReq::AmountAddReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AmountAddReq)
}
AmountAddReq::AmountAddReq(const AmountAddReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account_name().empty()) {
    account_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_account_name(),
      GetArena());
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bank.AmountAddReq)
}

void AmountAddReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AmountAddReq_bank_2eproto.base);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_ = PROTOBUF_LONGLONG(0);
}

AmountAddReq::~AmountAddReq() {
  // @@protoc_insertion_point(destructor:bank.AmountAddReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AmountAddReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  account_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AmountAddReq::ArenaDtor(void* object) {
  AmountAddReq* _this = reinterpret_cast< AmountAddReq* >(object);
  (void)_this;
}
void AmountAddReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AmountAddReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AmountAddReq& AmountAddReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AmountAddReq_bank_2eproto.base);
  return *internal_default_instance();
}


void AmountAddReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AmountAddReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AmountAddReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bank.AmountAddReq.account_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AmountAddReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AmountAddReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account_name().data(), static_cast<int>(this->_internal_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bank.AmountAddReq.account_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account_name(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AmountAddReq)
  return target;
}

size_t AmountAddReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AmountAddReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account_name());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AmountAddReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AmountAddReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AmountAddReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AmountAddReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AmountAddReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AmountAddReq)
    MergeFrom(*source);
  }
}

void AmountAddReq::MergeFrom(const AmountAddReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AmountAddReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {
    _internal_set_account_name(from._internal_account_name());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
}

void AmountAddReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AmountAddReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmountAddReq::CopyFrom(const AmountAddReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AmountAddReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmountAddReq::IsInitialized() const {
  return true;
}

void AmountAddReq::InternalSwap(AmountAddReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  account_name_.Swap(&other->account_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AmountAddReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AmountAddResp::InitAsDefaultInstance() {
}
class AmountAddResp::_Internal {
 public:
};

AmountAddResp::AmountAddResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AmountAddResp)
}
AmountAddResp::AmountAddResp(const AmountAddResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_amount_ = from.new_amount_;
  // @@protoc_insertion_point(copy_constructor:bank.AmountAddResp)
}

void AmountAddResp::SharedCtor() {
  new_amount_ = PROTOBUF_LONGLONG(0);
}

AmountAddResp::~AmountAddResp() {
  // @@protoc_insertion_point(destructor:bank.AmountAddResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AmountAddResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AmountAddResp::ArenaDtor(void* object) {
  AmountAddResp* _this = reinterpret_cast< AmountAddResp* >(object);
  (void)_this;
}
void AmountAddResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AmountAddResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AmountAddResp& AmountAddResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AmountAddResp_bank_2eproto.base);
  return *internal_default_instance();
}


void AmountAddResp::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AmountAddResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_amount_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AmountAddResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 new_amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          new_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AmountAddResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AmountAddResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_new_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AmountAddResp)
  return target;
}

size_t AmountAddResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AmountAddResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_new_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AmountAddResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AmountAddResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AmountAddResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AmountAddResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AmountAddResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AmountAddResp)
    MergeFrom(*source);
  }
}

void AmountAddResp::MergeFrom(const AmountAddResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AmountAddResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_amount() != 0) {
    _internal_set_new_amount(from._internal_new_amount());
  }
}

void AmountAddResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AmountAddResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmountAddResp::CopyFrom(const AmountAddResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AmountAddResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmountAddResp::IsInitialized() const {
  return true;
}

void AmountAddResp::InternalSwap(AmountAddResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(new_amount_, other->new_amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AmountAddResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AmountSubReq::InitAsDefaultInstance() {
}
class AmountSubReq::_Internal {
 public:
};

AmountSubReq::AmountSubReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AmountSubReq)
}
AmountSubReq::AmountSubReq(const AmountSubReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account_name().empty()) {
    account_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_account_name(),
      GetArena());
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bank.AmountSubReq)
}

void AmountSubReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AmountSubReq_bank_2eproto.base);
  account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_ = PROTOBUF_LONGLONG(0);
}

AmountSubReq::~AmountSubReq() {
  // @@protoc_insertion_point(destructor:bank.AmountSubReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AmountSubReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  account_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AmountSubReq::ArenaDtor(void* object) {
  AmountSubReq* _this = reinterpret_cast< AmountSubReq* >(object);
  (void)_this;
}
void AmountSubReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AmountSubReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AmountSubReq& AmountSubReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AmountSubReq_bank_2eproto.base);
  return *internal_default_instance();
}


void AmountSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AmountSubReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  amount_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AmountSubReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bank.AmountSubReq.account_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AmountSubReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AmountSubReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account_name().data(), static_cast<int>(this->_internal_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bank.AmountSubReq.account_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account_name(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AmountSubReq)
  return target;
}

size_t AmountSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AmountSubReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account_name());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AmountSubReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AmountSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AmountSubReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AmountSubReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AmountSubReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AmountSubReq)
    MergeFrom(*source);
  }
}

void AmountSubReq::MergeFrom(const AmountSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AmountSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {
    _internal_set_account_name(from._internal_account_name());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
}

void AmountSubReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AmountSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmountSubReq::CopyFrom(const AmountSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AmountSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmountSubReq::IsInitialized() const {
  return true;
}

void AmountSubReq::InternalSwap(AmountSubReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  account_name_.Swap(&other->account_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AmountSubReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AmountSubResp::InitAsDefaultInstance() {
}
class AmountSubResp::_Internal {
 public:
};

AmountSubResp::AmountSubResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.AmountSubResp)
}
AmountSubResp::AmountSubResp(const AmountSubResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_amount_ = from.new_amount_;
  // @@protoc_insertion_point(copy_constructor:bank.AmountSubResp)
}

void AmountSubResp::SharedCtor() {
  new_amount_ = PROTOBUF_LONGLONG(0);
}

AmountSubResp::~AmountSubResp() {
  // @@protoc_insertion_point(destructor:bank.AmountSubResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AmountSubResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AmountSubResp::ArenaDtor(void* object) {
  AmountSubResp* _this = reinterpret_cast< AmountSubResp* >(object);
  (void)_this;
}
void AmountSubResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AmountSubResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AmountSubResp& AmountSubResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AmountSubResp_bank_2eproto.base);
  return *internal_default_instance();
}


void AmountSubResp::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.AmountSubResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_amount_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AmountSubResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 new_amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          new_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AmountSubResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.AmountSubResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_new_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.AmountSubResp)
  return target;
}

size_t AmountSubResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.AmountSubResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 new_amount = 1;
  if (this->new_amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_new_amount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AmountSubResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.AmountSubResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AmountSubResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AmountSubResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.AmountSubResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.AmountSubResp)
    MergeFrom(*source);
  }
}

void AmountSubResp::MergeFrom(const AmountSubResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.AmountSubResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_amount() != 0) {
    _internal_set_new_amount(from._internal_new_amount());
  }
}

void AmountSubResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.AmountSubResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmountSubResp::CopyFrom(const AmountSubResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.AmountSubResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmountSubResp::IsInitialized() const {
  return true;
}

void AmountSubResp::InternalSwap(AmountSubResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(new_amount_, other->new_amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AmountSubResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bank.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bank.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:bank.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_bank_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:bank.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bank.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bank.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bank.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bank.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bank.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bank.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bank.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bank.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bank.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bank
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bank::BankCreateReq* Arena::CreateMaybeMessage< ::bank::BankCreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::BankCreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::BankCreateResp* Arena::CreateMaybeMessage< ::bank::BankCreateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::BankCreateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AccountCreateReq* Arena::CreateMaybeMessage< ::bank::AccountCreateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AccountCreateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AccountCreateResp* Arena::CreateMaybeMessage< ::bank::AccountCreateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AccountCreateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AmountAddReq* Arena::CreateMaybeMessage< ::bank::AmountAddReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AmountAddReq >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AmountAddResp* Arena::CreateMaybeMessage< ::bank::AmountAddResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AmountAddResp >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AmountSubReq* Arena::CreateMaybeMessage< ::bank::AmountSubReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AmountSubReq >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::AmountSubResp* Arena::CreateMaybeMessage< ::bank::AmountSubResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::AmountSubResp >(arena);
}
template<> PROTOBUF_NOINLINE ::bank::Empty* Arena::CreateMaybeMessage< ::bank::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bank::Empty >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
